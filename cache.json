{
  "sources": [
    {
      "title": "Python Software Foundation News",
      "feedUrl": "http://pyfound.blogspot.com/atom.xml",
      "siteUrl": "http://pyfound.blogspot.com/",
      "articles": [
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/z8bYv7-CvBw/the-2021-python-language-summit-what-is.html",
          "author": null,
          "description": "Brett Cannon gave a presentation at the 2021 Python Language Summit about the standard library in order to start a conversation about whether it's time to write a PEP that more clearly defines it.\n\n\n \nWhat Is the stdlib? \n\nHe succinctly described the stdlib as \"a collection of modules that ship with CPython (usually).\" This was the most accurate definition he could give, considering how big it is, how varied its contents are, and how long it has been around.\nHe didn't offer an answer to the question about whether or not there should be a new informational PEP to define clear goals for the stblib, but he wanted core developers to engage with the question. There are a variety of opinions on the stdlib, but it could be beneficial to come to some kind of agreement about:\n\nWhat it should be\nHow…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/z8bYv7-CvBw/the-2021-python-language-summit-what-is.html",
          "publishedOn": "2021-05-30T03:34:00.000Z",
          "wordCount": 1428,
          "title": "The 2021 Python Language Summit: What Is the stdlib?"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/F-Q2IZq3k0Q/the-2021-python-language-summit-python.html",
          "author": null,
          "description": "Mariatta Wijaya and Carol Willing gave a presentation about a new documentation work group at the 2021 Python Language Summit. Last year, Carol Willing and Ned Batchelder spoke about laying the groundwork for this project at the 2020 Python Language Summit.\n\n\n\n \nWhy Does Python Need a Documentation Work Group?\nThe mission of the Python Software Foundation is to advance the Python language and grow a diverse, international community of Python programmers so that the language can continue to flourish well into the future. However, when it comes to documentation, core developers don't necessarily reflect the larger world of Python users. If we can bring together core developers, documentarians, and educators, then we can have better documentation that serves the needs of the wider community m…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/F-Q2IZq3k0Q/the-2021-python-language-summit-python.html",
          "publishedOn": "2021-05-24T04:29:00.000Z",
          "wordCount": 1280,
          "title": "The 2021 Python Language Summit: The Python Documentation Work Group"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/7TvPpM19_4Q/the-2021-python-language-summit_23.html",
          "author": null,
          "description": "Matthias Klose gave a talk about the challenges of packaging Python for a Linux distribution at the 2021 Python Language Summit. He wanted to discuss:\n\nCPython sources and how they fit with Debian and Ubuntu\nOwnership of module installations \nArchitecture and platform support\nInclusiveness and the ubiquity of Python on various platforms\nCommunication issues\n \nWhat Is Python Like on Debian and Ubuntu? \n\nHe shared what Debian 11 and Ubuntu 21.04 have installed for Python. By default, there is almost nothing, so it's usually pulled in by various seeds or images. Linux distributions usually have a mature packaging system and don't ship naked CPython, unlike macOs or Windows.\nThese Debian and Ubuntu versions still use Python 2 to bootstrap PyPI, but one version of Python 3 is also shipped with …",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/7TvPpM19_4Q/the-2021-python-language-summit_23.html",
          "publishedOn": "2021-05-24T00:45:00.003Z",
          "wordCount": 1580,
          "title": "The 2021 Python Language Summit: The Challenges of Packaging Python for a Linux Distro"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/fTXZvKxS0Zo/the-2021-python-language-summit_22.html",
          "author": null,
          "description": "The first day of the 2021 Python Language Summit finished with a series of lightning talks from Petr Viktorin, Lorena Mesa, Scott Shawcroft, and Jeff Allen.\n\n\n \nThe Stable ABI and Limited C API\nPetr Viktorin spoke about the stable ABI and limited C API. The stable ABI is a way to compile a C extension on Python 3.x and run it on Python 3.x+. It was introduced in 2009 with PEP 384. You can use it to simplify extension maintenance, and it will allow you to support more versions. But it does have lower performance, and you can't do everything with it that you could with the full API.\nPetr Viktorin would like to see it used for bindings and embeddings. If Python is just a small part of your application and you don't want to invest a lot of maintainer time into supporting Python, then that woul…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/fTXZvKxS0Zo/the-2021-python-language-summit_22.html",
          "publishedOn": "2021-05-23T02:43:00.000Z",
          "wordCount": 1525,
          "title": "The 2021 Python Language Summit: Lightning Talks, Round 1"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/55OUWZdNrJE/the-2021-python-language-summit-hpy.html",
          "author": null,
          "description": "At the 2021 Python Language Summit, Antonio Cuni gave a presentation about HPy. He also gave a presentation about HPy at the 2020 Python Language Summit, so this year he shared updates on how the project has evolved since then.\n\n \n \nWhat Is HPy?\nHPy is an alternative API for writing C extensions. Although the current Python C API shows CPython implementation details, HPy hides all the implementation details that would otherwise be exposed. Antonio Cuni said that, if everyone used HPy, then it would help Python evolve in the long term.\nUsing HPy extensions will make it easier to support alternative implementations. HPy is designed to be GC friendly and isn't build on top of ref counting. It is also designed to have zero overhead on CPython, so you can port an existing module from the Python…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/55OUWZdNrJE/the-2021-python-language-summit-hpy.html",
          "publishedOn": "2021-05-22T19:20:00.000Z",
          "wordCount": 1290,
          "title": "The 2021 Python Language Summit: HPy — Present and Future"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/Mb7GnQBu9NY/the-2021-python-language-summit-making.html",
          "author": null,
          "description": "At the 2021 Python Language Summit, Guido van Rossum gave a presentation about plans for making CPython faster. This presentation came right after Dino Viehland's talk about Instagram's performance improvements to CPython and made multiple references to it.\n \n \nCan We Make CPython Faster?\nWe can, but it's not yet clear by how much. Last October, Mark Shannon shared a plan on GitHub and python-dev. He asked for feedback and said that he could make CPython five times faster in four years, or fifty percent faster per year for four years in a row. He was looking for funding and wouldn't reveal the details of his plan without it.\nHow Will We Make CPython Faster? \n\nSeven months ago, Guido van Rossum left a brief retirement to work at Microsoft. He was given the freedom to pick a project and deci…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/Mb7GnQBu9NY/the-2021-python-language-summit-making.html",
          "publishedOn": "2021-05-21T00:42:00.001Z",
          "wordCount": 1242,
          "title": "The 2021 Python Language Summit: Making CPython Faster"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/4Tpn4LZPws4/the-2021-python-language-summit-cpython.html",
          "author": null,
          "description": "Dino Viehland gave a presentation at the 2021 Python Language Summit about improvements to CPython's performance at Instagram. \n\nCinder is Instagram's internal performance-oriented production version of\r\nCPython 3.8, so all of the comparisons in this presentation dealt with Python 3.8. Cinder has a lot of performance optimizations, including\r\nbytecode inline caching, eager evaluation of coroutines, a method-at-a-time\r\nJIT, and an experimental bytecode compiler that uses type annotations to emit\r\ntype-specialized bytecode that performs better in the JIT.\nSuccessful Improvements\nInstagram did a lot of work with asynchronous I/O. One big change was sending and receiving values without raising StopIteration. Raising all of those exceptions was a huge source of overhead. On simple benchmarks, t…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/4Tpn4LZPws4/the-2021-python-language-summit-cpython.html",
          "publishedOn": "2021-05-20T04:02:00.001Z",
          "wordCount": 1686,
          "title": "The 2021 Python Language Summit: CPython Performance Improvements at Instagram"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/JSbNFZCoINo/the-2021-python-language-summit_16.html",
          "author": null,
          "description": "Victor Stinner and Dong-hee Na gave a presentation at the 2021 Python Language Summit about running multiple Python interpreters in parallel in the same process.\n\n\n\n\nUse Cases \n\nVictor Stinner started by explaining why we would need to make the changes that they're discussing. One use case would be if you wanted to embed Python and extend the features of your application, like Vim, Blender, LibreOffice, and pybind11. Another use case is subinterpreters. For example, to handle HTTP requests, there is Apache mod_wsgi, which uses subinterpreters. There are also plugins for WeeChat, which is an IRC client written in C.\n\nEmbedding Python\nOne of the current issues with embedding Python is that it doesn't explicitly release memory at exit. If you use a tool to track memory leaks, such as Valgrind…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/JSbNFZCoINo/the-2021-python-language-summit_16.html",
          "publishedOn": "2021-05-17T03:53:00.002Z",
          "wordCount": 1479,
          "title": "The 2021 Python Language Summit: Progress on Running Multiple Python Interpreters in Parallel in the Same Process"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/YfwxVhCg4nM/the-2021-python-language-summit-pep-654.html",
          "author": null,
          "description": "PEP 654 was authored by Irit Katriel, Yury Selivanov, and Guido van Rossum. This PEP is currently at the draft stage. At the 2021 Python Language Summit, the authors shared what it is, why we need it, and which ideas they rejected.\n\n\n What Is PEP 654?\n\n\nThe purpose of this PEP is to help Python users handle unrelated exceptions. Right now, if you're dealing with several unrelated exceptions, you can:\n\n\nRaise one exception and throw away the others, in which case you're losing exceptions\n\nReturn a list of exceptions instead of raising them, in which case they become error codes rather than exceptions, so you can't handle them with exception-handling mechanisms\nWrap the list of exceptions in a wrapper exception and use it as a list of error codes, which still can't be handled with exception-…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/YfwxVhCg4nM/the-2021-python-language-summit-pep-654.html",
          "publishedOn": "2021-05-16T03:14:00.003Z",
          "wordCount": 1423,
          "title": "The 2021 Python Language Summit: PEP 654 — Exception Groups and except*"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/d6dgSmSBl6M/the-2021-python-language-summit-welcome.html",
          "author": null,
          "description": "As attendees slowly filtered into the virtual event leading up to the official start time, they were clearly happy to see each other and have the chance to get together virtually even though PyCon US and the language summit have had to be remote for two years in a row. Although we would like to see each other in person again, one benefit of keeping the summit virtual this year was that more people were able to participate than usual.\nNormally, the number of people attending would be small enough that there would be time for each person to take a moment to introduce themselves to the group. Since there were more participants than usual this year, Łukasz Langa walked us through a slide deck that had a page for each of the attendees. It was an international event, with participants attending from North America, South America, Europe, Africa, the Middle East, Asia, and Oceania.\nAfter Łukasz finished the introductions, Ewa Jodlowska told us about the code of conduct and the procedures in place to help all participants feel welcome and have a positive experience.\nWith the 2021 Python Language Summit off to a good start, we took a group photo and were ready to launch into the talks!",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/d6dgSmSBl6M/the-2021-python-language-summit-welcome.html",
          "publishedOn": "2021-05-14T01:05:00.001Z",
          "wordCount": 953,
          "title": "The 2021 Python Language Summit: Welcome, Introductions, Guidelines"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/_-8J6H4Mr-o/the-2021-python-language-summit.html",
          "author": null,
          "description": "Every year, a small group of core developers from Python implementations such as CPython, PyPy, Jython, and more come together to share information, discuss problems, and seek consensus in order to help Python continue to flourish.\n\n\nThe Python Language Summit features short presentations followed by group discussions. The topics can relate to the language itself, the standard library, \r\nthe development process, documentation, packaging, and more! In 2021, the summit was held over two days by videoconference and was led by Mariatta Wijaya and Łukasz \r\nLanga.\n\nIf you weren't able to attend the summit, then you can still stay up to date with what's happening in the world of Python by reading blog posts about all of the talks that were given. Over the next few weeks, you'll be able to \r\ndive into all of the news from the summit so you can join in \r\non the big conversations that are happening in the Python community.\n\n\nDay 1 \n\n \nWelcome, Introductions, Guidelines \nŁukasz \r\nLanga \n\n \nPEP 654 — Exception Groups and except* \nIrit Katriel, Yury Selivanov, and Guido van Rossum \n\n \nProgress on Running Multiple Python Interpreters in Parallel in the Same Process \nVictor Stinner and Dong-hee Na\n \nCPython Improvements at Instagram \nDino Viehland\n \nMaking CPython Faster \nGuido van Rossum\n \nHPy — Present and Future \nAntonio Cuni\n \nLightning Talks, Round 1 \nPetr Viktorin, Lorena Mesa, Scott Shawcroft, and Jeff Allen\n \n\n\nDay 2 \n\n\n \n\nThe Challenges of Packaging Python for a Linux Distro \nMatthias Klose\n \nThe Python Documentation Work Group \nMariatta Wijaya and Carol Willing\n \nWhat Is the stdlib? \nBrett Cannon\n \nWhat Should I Work on as a Core Dev? \nEric Snow\n \nFuzzing and Testing Python With Properties \nZac Hatfield-Dodds\n\n \nLightning Talks, Round 2 \nRonny Pfannschmidt, Pablo Galindo, Batuhan Taskaya, Luciano Ramalho, Jason R. Coombs, Mark Shannon, and Tobias Kohn \n \n\nWe hope you enjoy diving into what went on at the summit, and we're looking forward to seeing how the Python community continues these discussions.",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/_-8J6H4Mr-o/the-2021-python-language-summit.html",
          "publishedOn": "2021-05-13T20:27:00.013Z",
          "wordCount": 1057,
          "title": "The 2021 Python Language Summit"
        },
        {
          "id": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/RswFJu_V2uE/debora-azevedo-finding-sense-of.html",
          "author": null,
          "description": "PyLadies Brazil co-founder,  Débora Azevedo can encapsulate her feelings about the Python community in one word: Belonging.  \n\nGrowing up in Natal, Brazil, Débora never would’ve guessed that Python would come to play such an important role in her life. “When I was first learning about programming in high school, I found it really difficult to comprehend. At that time I wrote code in a notebook, because I didn’t own a computer.” \n\nDébora stumbled upon her love for programming accidentally when she was studying to be an English teacher. “I decided to pursue a computer networking course because I knew I didn’t want to code. There were four terms in the course and during the fourth term I had to learn programming,” she said.  “I was convinced it just wouldn’t work for me. But when I started to…",
          "link": "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/RswFJu_V2uE/debora-azevedo-finding-sense-of.html",
          "publishedOn": "2021-05-12T16:20:00.000Z",
          "wordCount": 1357,
          "title": "Débora Azevedo: Finding A Sense of Belonging Through the Python Community"
        }
      ]
    },
    {
      "title": "The Django weblog",
      "feedUrl": "https://www.djangoproject.com/rss/weblog/",
      "siteUrl": "https://www.djangoproject.com/weblog/",
      "articles": [
        {
          "id": "https://www.djangoproject.com/weblog/2021/may/26/django-irc-channels-migration-liberachat/",
          "author": "Django Software Foundation",
          "description": "At approximately 3 am UTC on May 26, 2021, the operators of the Freenode IRC network assumed control of the #django* channels on that network. This means that representatives of the Django community no longer retain the ability to enforce Django's Code of Conduct on the Freenode IRC network. Additionally, we do not have the ability to set a topic on Django-related IRC channels on this network.\n\r\n\r\nPlease join us in #django and #django-dev on Libera.Chat for discussion of the usage and development of Django, respectively. Additionally, you may refer to our documentation on Contributing to Django for some of the other options available to you for discussion of the usage and development of Django.",
          "link": "https://www.djangoproject.com/weblog/2021/may/26/django-irc-channels-migration-liberachat/",
          "publishedOn": "2021-05-26T17:45:15.000Z",
          "wordCount": 669,
          "title": "Django IRC Channels migration to Libera.Chat"
        },
        {
          "id": "https://www.djangoproject.com/weblog/2021/may/14/django-4x-technical-board-election-results/",
          "author": "Chaim Kirby",
          "description": "The Technical Board for the Django 4.x release cycle will be\n\r\n\r\n\r\nAndrew Godwin\n\r\nFlorian Apolloner\n\r\nSimon Charette\n\r\nAdam Johnson\n\r\nThomas Forbes\n\r\n\r\n\r\nCongratulations to the new board and a special thank you to departing Technical Board members James Bennett and Markus Holtermann.\n\r\n\r\nThank you to everyone who participated in the nominations and voting.\n\r\n\r\nVoting breakdown:\n\r\n\r\n49 Eligible voters opted-in to voting\n\r\n46 Eligible voters cast votes\n\r\n \r\n\r\nCondorcet pairwise evaluation results\n\r\n\r\nAndrew Godwin  (Condorcet winner: wins contests with all other choices)\n\r\nFlorian Apolloner  loses to Andrew Godwin by 25–8\n\r\n Simon Charette  loses to Andrew Godwin by 28–7, loses to Florian Apolloner by 23–9\n\r\nAdam Johnson  loses to Andrew Godwin by 27–9, loses to Simon Charette by 19–18\n\r\nThomas Forbes  loses to Andrew Godwin by 30–4, loses to Adam Johnson by 25–5",
          "link": "https://www.djangoproject.com/weblog/2021/may/14/django-4x-technical-board-election-results/",
          "publishedOn": "2021-05-14T13:19:49.000Z",
          "wordCount": 684,
          "title": "Django 4.x Technical Board Election Results"
        },
        {
          "id": "https://www.djangoproject.com/weblog/2021/may/13/bugfix-releases/",
          "author": "Mariusz Felisiak",
          "description": "Today we've issued\n3.2.3,\n3.1.11, and\n2.2.23  bugfix releases.\nThe release package and checksums are available from our downloads page, as well as from the Python Package Index. The PGP key ID used for this release is Mariusz Felisiak: 2EF56372BA48CD1B.",
          "link": "https://www.djangoproject.com/weblog/2021/may/13/bugfix-releases/",
          "publishedOn": "2021-05-13T07:30:54.000Z",
          "wordCount": 598,
          "title": "Django bugfix releases issued: 3.2.3, 3.1.11, and 2.2.23"
        },
        {
          "id": "https://www.djangoproject.com/weblog/2021/may/06/security-releases/",
          "author": "Mariusz Felisiak",
          "description": "In accordance with our security release policy, the Django team\nis issuing\nDjango 3.2.2,\nDjango 3.1.10, and\nDjango 2.2.22.\nThese releases address the security issue with severity \"moderate\" detailed below. We encourage all users of Django to upgrade as soon as possible.\nCVE-2021-32052: Header injection possibility since URLValidator accepted newlines in input on Python 3.9.5+\nOn Python 3.9.5+, URLValidator didn't prohibit\nnewlines and tabs. If you used values with newlines in HTTP response, you could\nsuffer from header injection attacks. Django itself wasn't vulnerable because\nHttpResponse prohibits newlines in HTTP headers.\nMoreover, the URLField form field which uses URLValidator silently\nremoves newlines and tabs on Python 3.9.5+, so the possibility of newlines\nentering your data only existed if you are using this validator outside of the\nform fields.\nThis issue was introduced by the bpo-43882 fix.\nAffected supported versions\nDjango main branch\nDjango 3.2\nDjango 3.1\nDjango 2.2\nResolution\nPatches to resolve the issue have been applied to Django's main branch and to\nthe 3.2, 3.1, and 2.2 release branches. The patches may be obtained from the\nfollowing changesets:\nOn the main branch\nOn the 3.2 release branch\nOn the 3.1 release branch\nOn the 2.2 release branch\nThe following releases have been issued:\nDjango 3.2.2 (download Django 3.2.2 | 3.2.2 checksums)\nDjango 3.1.10 (download Django 3.1.10 | 3.1.10 checksums)\nDjango 2.2.22 (download Django 2.2.22 | 2.2.22 checksums)\nThe PGP key ID used for this release is Mariusz Felisiak: 2EF56372BA48CD1B.\nGeneral notes regarding security reporting\nAs always, we ask that potential security issues be reported via\nprivate email to security@djangoproject.com, and not via Django's\nTrac instance or the django-developers list. Please see our security\npolicies for further\ninformation.",
          "link": "https://www.djangoproject.com/weblog/2021/may/06/security-releases/",
          "publishedOn": "2021-05-06T06:17:54.000Z",
          "wordCount": 836,
          "title": "Django security releases issued: 3.2.2, 3.1.10, and 2.2.22"
        },
        {
          "id": "https://www.djangoproject.com/weblog/2021/may/04/pycharm-dsf-campaign-2021-results/",
          "author": "William Vincent",
          "description": "The fifth annual JetBrains PyCharm promotion in April netted the Django Software Foundation $45,000 this year, a slight increase over the $40,000 raised last year.\nThis amount represents roughly 20% of the DSF's overall budget, which goes directly into funding the continued development and support of Django via the Django Fellowship program and Django conferences worldwide.\nDjango Software Foundation\nThe Django Software Foundation is the non-profit foundation that supports the development of the Django Web framework. It funds the Django Fellowship program, which currently supports two Fellows who triage tickets, review/merge patches from the community, and work on infrastructure. The introduction of this program starting in 2015 has gone a long way towards ensuring a consistent major release cycle and the fixing/blocking of severe bugs. DSF also funds development sprints, community events like DjangoCons, and related conferences and workshops globally.\nFundraising is still ongoing and you can donate directly at djangoproject.com/fundraising.",
          "link": "https://www.djangoproject.com/weblog/2021/may/04/pycharm-dsf-campaign-2021-results/",
          "publishedOn": "2021-05-04T16:25:25.000Z",
          "wordCount": 705,
          "title": "PyCharm &amp; DSF Campaign 2021 Results"
        },
        {
          "id": "https://www.djangoproject.com/weblog/2021/may/04/security-releases/",
          "author": "Carlton Gibson",
          "description": "In accordance with our security release policy, the Django team\nis issuing\nDjango 3.2.1,\nDjango 3.1.9, and\nDjango 2.2.21.\nThese release addresses the security issue detailed below. We encourage all users of Django to upgrade as soon as possible.\nCVE-2021-31542: Potential directory-traversal via uploaded files\nMultiPartParser, UploadedFile, and FieldFile allowed\ndirectory-traversal via uploaded files with suitably crafted file names.\nIn order to mitigate this risk, stricter basename and path sanitation is now\napplied.\nThis issue has low severity, according to the Django security policy.\nThank you to Jasu Viding for the report.\nAffected supported versions\nDjango main branch\nDjango 3.2\nDjango 3.1\nDjango 2.2\nResolution\nPatches to resolve the issue have been applied to Django's main branch and to\nthe 3.2, 3.1, and 2.2 release branches. The patches may be obtained from the\nfollowing changesets:\nOn the main branch\nOn the 3.2 release branch\nOn the 3.1 release branch\nOn the 2.2 release branch\nThe following releases have been issued:\nDjango 3.2.1 (download Django 3.2.1 | 3.2.1 checksums)\nDjango 3.1.9 (download Django 3.1.9 | 3.1.9 checksums)\nDjango 2.2.21 (download Django 2.2.21 | 2.2.21 checksums)\nThe PGP key ID used for these releases is Carlton Gibson: E17DF5C82B4F9D00.\nGeneral notes regarding security reporting\nAs always, we ask that potential security issues be reported via\nprivate email to security@djangoproject.com, and not via Django's\nTrac instance or the django-developers list. Please see our security\npolicies for further\ninformation.",
          "link": "https://www.djangoproject.com/weblog/2021/may/04/security-releases/",
          "publishedOn": "2021-05-04T08:51:35.000Z",
          "wordCount": 792,
          "title": "Django security releases issued: 3.2.1, 3.1.9, and 2.2.21"
        }
      ]
    },
    {
      "title": "Ember.js Blog",
      "feedUrl": "https://blog.emberjs.com/rss.xml",
      "siteUrl": "https://blog.emberjs.com/rss.xml",
      "articles": [
        {
          "id": "https://blog.emberjs.com/the-ember-times-issue-180",
          "author": null,
          "description": "👋 Emberistas! 🐹\nEmber's 10 year anniversary, Prettier for Handlebars support, Embroider in 3.5 weeks, GAAD pledge, quickstart to authentication, built with Ember: Fleetbase, and new and shiny add-ons ✨\nHappy 10 year anniversary, Ember.js! 🎉\nMany thanks to Natasha Fel and Andrey Fel (@andreyfel) for sharing their photos from Ember Nizhny Novgorod's Meetup, which featured a celebratory Nizhny Novgorod Tomster cake for Ember's big anniversary! Check out more photos from the meetup here.\nPrettier for Handlebars support 🙌\nPrettier can now officially format HTML templates with Handlebars (HBS) in the newly released version 2.3.0. Thank you to Cyrille David (@dcyriller) for pushing this initiative, which started in 2017, through the finish line.\nPrettier is an opinionated code formatter. It e…",
          "link": "https://blog.emberjs.com/the-ember-times-issue-180",
          "publishedOn": "2021-05-21T00:00:00.000Z",
          "wordCount": 1121,
          "title": "The Ember Times - Issue No. 180"
        },
        {
          "id": "https://blog.emberjs.com/gaad-2021",
          "author": null,
          "description": "As we join Global Accessibility Awareness Day (GAAD) in celebrating its tenth anniversary, we are delighted to announce that the Ember JavaScript Framework has taken the GAAD pledge to make accessibility a core value of our framework.\nFor those who know the project well, this will come as no surprise. It’s no secret that we think that accessibility is an integral part of quality code. Ember.js is committed to providing a well-lit path for developer success, and our plans to make it easier for developers to write accessible code are part of that. In 2020, the Ember Accessibility Strike Team became the Ember Accessibility Working Group, demonstrating our commitment to long-term accessibility growth in the framework.\nWhat We've Done So Far\nEmber has also been shipping improvements with the “a…",
          "link": "https://blog.emberjs.com/gaad-2021",
          "publishedOn": "2021-05-20T00:00:00.000Z",
          "wordCount": 627,
          "title": "The Ember JS Framework Takes the GAAD Pledge"
        },
        {
          "id": "https://blog.emberjs.com/the-ember-times-issue-179",
          "author": null,
          "description": "👋 Emberistas! 🐹\nGlobal Accessibility Awareness Day, Readers' Question: Embroider status update, @use with Ember Apollo Client, and how JS frameworks solved the problem of rendering fast.\nMay 20th is Global Accessibility Awareness Day 💟\nGlobal Accessibility Awareness Day, an awareness day focusing on digital access and inclusion for the more than one billion people with disabilities and impairments, will be celebrated on May 20, 2021. Here are some suggestions from Melanie Sumner (@MelSumner) on how you can get involved in some accessibility (a11y) related open source projects!\nHelp convert ember-component-patterns from Gitbook to an Ember app\nHelp with a11y-automation.dev which is a project to track a11y automation\nCheck out the help wanted page for issues in the ember-a11y GitHub organ…",
          "link": "https://blog.emberjs.com/the-ember-times-issue-179",
          "publishedOn": "2021-05-07T00:00:00.000Z",
          "wordCount": 1069,
          "title": "The Ember Times - Issue No. 179"
        }
      ]
    }
  ],
  "cliVersion": "1.10.2"
}