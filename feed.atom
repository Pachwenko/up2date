<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-06-15T00:40:58.276Z</id>
    <title>osmos::feed</title>
    <updated>2021-06-15T00:40:58.276Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: Lightning Talks, Round 2]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/YhpQywGg83E/the-2021-python-language-summit.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/YhpQywGg83E/the-2021-python-language-summit.html"/>
        <updated>2021-06-09T16:13:00.000Z</updated>
        <summary type="html"><![CDATA[The second day of the 2021 Python Language Summit finished with a series of lightning talks from Ronny Pfannschmidt, Pablo Galindo, Batuhan Taskaya, Luciano Ramalho, Jason R. Coombs, Mark Shannon, and Tobias Kohn.



Annotated Assertions: Debugging With Joy
Ronny Pfannschmidt spoke about annotated assertions. He is a pytest maintainer and loves approachable debugging.
He compared assertions in unittest with assertions in pytest. He remarked that mistakes have been made in the past and are still being made today. Before pytest 2.1, pytest would reinterpret assertions, which was bad for side effects. Today, pytest deals with side effects by handling all of the variables, collecting them, and showing them to you. 
Here's what he would like to see in Python:



Here's what he'd like to do:

Cr…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: Fuzzing and Testing Python With Properties]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/4JkUDb_sHRc/the-2021-python-language-summit-fuzzing.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/4JkUDb_sHRc/the-2021-python-language-summit-fuzzing.html"/>
        <updated>2021-06-06T16:37:00.002Z</updated>
        <summary type="html"><![CDATA[At the 2021 Python Language Summit, Zac Hatfield-Dodds gave a presentation about fuzzing and testing with Python properties. This presentation tied in with the one he gave at the 2020 Python Language Summit.



 

What Is Testing?
For the purposes of this talk, he defined testing as the art and science of running code and then checking if it did what it was supposed to do. He added that, although assertions, type checkers, linters, and code review are good, they are not testing.
There are two general reasons why we might have tests:

For correctness:

The goal is to validate software and determine that they are no bugs.
Nondeterminism is acceptable.
Finding any fault is a success. 

For software engineering (programming, over time, in teams):

The goal is to validate changes or detect regr…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: What Should I Work on as a Core Dev?]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/ntiuibWUuVc/the-2021-python-language-summit-what.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/ntiuibWUuVc/the-2021-python-language-summit-what.html"/>
        <updated>2021-06-05T20:38:00.001Z</updated>
        <summary type="html"><![CDATA[At the 2021 Python Language Summit, Eric Snow gave a presentation about how core developers can receive guidance to help them work on improvements to the language that will bring the most benefit to the Python community.




What Does the Community Need? 
When Eric Snow first got involved in core development over a decade ago, he liked that there was so much to learn. But he found that the organization didn't offer a lot of direction in terms of guiding volunteers to the kind of work that would have the biggest impact. 
Over the years, he's thought about how he and other contributors decide what to work on and why. What directs the efforts of contributors and core developers? Contributors make decisions based on their availability, expertise, and interests. Core developers need to act as s…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Ember Times - Issue No. 181]]></title>
        <id>https://blog.emberjs.com/the-ember-times-issue-181</id>
        <link href="https://blog.emberjs.com/the-ember-times-issue-181"/>
        <updated>2021-06-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[👋 Emberistas! 🐹
EmberFest, remodeling an Ember app, Ember CLI history, ember-auto-import, web bundling, ember-concurrency release, Ember Data roundup, rwjblue podcast, and keeping a clean git history.
EmberFest 2021 is happening! 🏛️
Mark your calendars for September 30th – October 1st of 2021 – EmberFest will be back as a hybrid on-site/virtual event! EmberFest is the European Community Ember Conference. The location will be a secret until ticket sales are open so stay tuned.
The EmberFest team is confident that this year’s conference can happen in person. At the same time, they realize that some people can’t or might not want to travel yet, so for the first time, EmberFest is going hybrid: there will be both on-site and remote tickets for a livestream available. Early bird tickets will…]]></summary>
        <author>
            <name>Ember.js Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django security releases issued: 3.2.4, 3.1.12, and 2.2.24]]></title>
        <id>https://www.djangoproject.com/weblog/2021/jun/02/security-releases/</id>
        <link href="https://www.djangoproject.com/weblog/2021/jun/02/security-releases/"/>
        <updated>2021-06-02T09:07:49.000Z</updated>
        <summary type="html"><![CDATA[In accordance with our security release policy, the Django team
is issuing
Django 3.2.4,
Django 3.1.12, and
Django 2.2.24.
These release addresses the security issue detailed below. We encourage all
users of Django to upgrade as soon as possible.
CVE-2021-33203: Potential directory traversal via admindocs
Staff members could use the admindocs
TemplateDetailView view to check the existence of arbitrary files.
Additionally, if (and only if) the default admindocs templates have been
customized by the developers to also expose the file contents, then not only
the existence but also the file contents would have been exposed.
As a mitigation, path sanitation is now applied and only files within the
template root directories can be loaded.
This issue has low severity, according to the Django secu…]]></summary>
        <author>
            <name>Carlton Gibson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: What Is the stdlib?]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/z8bYv7-CvBw/the-2021-python-language-summit-what-is.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/z8bYv7-CvBw/the-2021-python-language-summit-what-is.html"/>
        <updated>2021-05-30T03:34:00.000Z</updated>
        <summary type="html"><![CDATA[Brett Cannon gave a presentation at the 2021 Python Language Summit about the standard library in order to start a conversation about whether it's time to write a PEP that more clearly defines it.


 
What Is the stdlib? 

He succinctly described the stdlib as "a collection of modules that ship with CPython (usually)." This was the most accurate definition he could give, considering how big it is, how varied its contents are, and how long it has been around.
He didn't offer an answer to the question about whether or not there should be a new informational PEP to define clear goals for the stblib, but he wanted core developers to engage with the question. There are a variety of opinions on the stdlib, but it could be beneficial to come to some kind of agreement about:

What it should be
How…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django IRC Channels migration to Libera.Chat]]></title>
        <id>https://www.djangoproject.com/weblog/2021/may/26/django-irc-channels-migration-liberachat/</id>
        <link href="https://www.djangoproject.com/weblog/2021/may/26/django-irc-channels-migration-liberachat/"/>
        <updated>2021-05-26T17:45:15.000Z</updated>
        <summary type="html"><![CDATA[At approximately 3 am UTC on May 26, 2021, the operators of the Freenode IRC network assumed control of the #django* channels on that network. This means that representatives of the Django community no longer retain the ability to enforce Django's Code of Conduct on the Freenode IRC network. Additionally, we do not have the ability to set a topic on Django-related IRC channels on this network.


Please join us in #django and #django-dev on Libera.Chat for discussion of the usage and development of Django, respectively. Additionally, you may refer to our documentation on Contributing to Django for some of the other options available to you for discussion of the usage and development of Django.]]></summary>
        <author>
            <name>Django Software Foundation</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: The Python Documentation Work Group]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/F-Q2IZq3k0Q/the-2021-python-language-summit-python.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/F-Q2IZq3k0Q/the-2021-python-language-summit-python.html"/>
        <updated>2021-05-24T04:29:00.000Z</updated>
        <summary type="html"><![CDATA[Mariatta Wijaya and Carol Willing gave a presentation about a new documentation work group at the 2021 Python Language Summit. Last year, Carol Willing and Ned Batchelder spoke about laying the groundwork for this project at the 2020 Python Language Summit.



 
Why Does Python Need a Documentation Work Group?
The mission of the Python Software Foundation is to advance the Python language and grow a diverse, international community of Python programmers so that the language can continue to flourish well into the future. However, when it comes to documentation, core developers don't necessarily reflect the larger world of Python users. If we can bring together core developers, documentarians, and educators, then we can have better documentation that serves the needs of the wider community m…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: The Challenges of Packaging Python for a Linux Distro]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/7TvPpM19_4Q/the-2021-python-language-summit_23.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/7TvPpM19_4Q/the-2021-python-language-summit_23.html"/>
        <updated>2021-05-24T00:45:00.003Z</updated>
        <summary type="html"><![CDATA[Matthias Klose gave a talk about the challenges of packaging Python for a Linux distribution at the 2021 Python Language Summit. He wanted to discuss:

CPython sources and how they fit with Debian and Ubuntu
Ownership of module installations 
Architecture and platform support
Inclusiveness and the ubiquity of Python on various platforms
Communication issues
 
What Is Python Like on Debian and Ubuntu? 

He shared what Debian 11 and Ubuntu 21.04 have installed for Python. By default, there is almost nothing, so it's usually pulled in by various seeds or images. Linux distributions usually have a mature packaging system and don't ship naked CPython, unlike macOs or Windows.
These Debian and Ubuntu versions still use Python 2 to bootstrap PyPI, but one version of Python 3 is also shipped with …]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: Lightning Talks, Round 1]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/fTXZvKxS0Zo/the-2021-python-language-summit_22.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/fTXZvKxS0Zo/the-2021-python-language-summit_22.html"/>
        <updated>2021-05-23T02:43:00.000Z</updated>
        <summary type="html"><![CDATA[The first day of the 2021 Python Language Summit finished with a series of lightning talks from Petr Viktorin, Lorena Mesa, Scott Shawcroft, and Jeff Allen.


 
The Stable ABI and Limited C API
Petr Viktorin spoke about the stable ABI and limited C API. The stable ABI is a way to compile a C extension on Python 3.x and run it on Python 3.x+. It was introduced in 2009 with PEP 384. You can use it to simplify extension maintenance, and it will allow you to support more versions. But it does have lower performance, and you can't do everything with it that you could with the full API.
Petr Viktorin would like to see it used for bindings and embeddings. If Python is just a small part of your application and you don't want to invest a lot of maintainer time into supporting Python, then that woul…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: HPy — Present and Future]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/55OUWZdNrJE/the-2021-python-language-summit-hpy.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/55OUWZdNrJE/the-2021-python-language-summit-hpy.html"/>
        <updated>2021-05-22T19:20:00.000Z</updated>
        <summary type="html"><![CDATA[At the 2021 Python Language Summit, Antonio Cuni gave a presentation about HPy. He also gave a presentation about HPy at the 2020 Python Language Summit, so this year he shared updates on how the project has evolved since then.

 
 
What Is HPy?
HPy is an alternative API for writing C extensions. Although the current Python C API shows CPython implementation details, HPy hides all the implementation details that would otherwise be exposed. Antonio Cuni said that, if everyone used HPy, then it would help Python evolve in the long term.
Using HPy extensions will make it easier to support alternative implementations. HPy is designed to be GC friendly and isn't build on top of ref counting. It is also designed to have zero overhead on CPython, so you can port an existing module from the Python…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: Making CPython Faster]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/Mb7GnQBu9NY/the-2021-python-language-summit-making.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/Mb7GnQBu9NY/the-2021-python-language-summit-making.html"/>
        <updated>2021-05-21T00:42:00.001Z</updated>
        <summary type="html"><![CDATA[At the 2021 Python Language Summit, Guido van Rossum gave a presentation about plans for making CPython faster. This presentation came right after Dino Viehland's talk about Instagram's performance improvements to CPython and made multiple references to it.
 
 
Can We Make CPython Faster?
We can, but it's not yet clear by how much. Last October, Mark Shannon shared a plan on GitHub and python-dev. He asked for feedback and said that he could make CPython five times faster in four years, or fifty percent faster per year for four years in a row. He was looking for funding and wouldn't reveal the details of his plan without it.
How Will We Make CPython Faster? 

Seven months ago, Guido van Rossum left a brief retirement to work at Microsoft. He was given the freedom to pick a project and deci…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Ember Times - Issue No. 180]]></title>
        <id>https://blog.emberjs.com/the-ember-times-issue-180</id>
        <link href="https://blog.emberjs.com/the-ember-times-issue-180"/>
        <updated>2021-05-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[👋 Emberistas! 🐹
Ember's 10 year anniversary, Prettier for Handlebars support, Embroider in 3.5 weeks, GAAD pledge, quickstart to authentication, built with Ember: Fleetbase, and new and shiny add-ons ✨
Happy 10 year anniversary, Ember.js! 🎉
Many thanks to Natasha Fel and Andrey Fel (@andreyfel) for sharing their photos from Ember Nizhny Novgorod's Meetup, which featured a celebratory Nizhny Novgorod Tomster cake for Ember's big anniversary! Check out more photos from the meetup here.
Prettier for Handlebars support 🙌
Prettier can now officially format HTML templates with Handlebars (HBS) in the newly released version 2.3.0. Thank you to Cyrille David (@dcyriller) for pushing this initiative, which started in 2017, through the finish line.
Prettier is an opinionated code formatter. It e…]]></summary>
        <author>
            <name>Ember.js Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: CPython Performance Improvements at Instagram]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/4Tpn4LZPws4/the-2021-python-language-summit-cpython.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/4Tpn4LZPws4/the-2021-python-language-summit-cpython.html"/>
        <updated>2021-05-20T04:02:00.001Z</updated>
        <summary type="html"><![CDATA[Dino Viehland gave a presentation at the 2021 Python Language Summit about improvements to CPython's performance at Instagram. 

Cinder is Instagram's internal performance-oriented production version of
CPython 3.8, so all of the comparisons in this presentation dealt with Python 3.8. Cinder has a lot of performance optimizations, including
bytecode inline caching, eager evaluation of coroutines, a method-at-a-time
JIT, and an experimental bytecode compiler that uses type annotations to emit
type-specialized bytecode that performs better in the JIT.
Successful Improvements
Instagram did a lot of work with asynchronous I/O. One big change was sending and receiving values without raising StopIteration. Raising all of those exceptions was a huge source of overhead. On simple benchmarks, t…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Ember JS Framework Takes the GAAD Pledge]]></title>
        <id>https://blog.emberjs.com/gaad-2021</id>
        <link href="https://blog.emberjs.com/gaad-2021"/>
        <updated>2021-05-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[As we join Global Accessibility Awareness Day (GAAD) in celebrating its tenth anniversary, we are delighted to announce that the Ember JavaScript Framework has taken the GAAD pledge to make accessibility a core value of our framework.
For those who know the project well, this will come as no surprise. It’s no secret that we think that accessibility is an integral part of quality code. Ember.js is committed to providing a well-lit path for developer success, and our plans to make it easier for developers to write accessible code are part of that. In 2020, the Ember Accessibility Strike Team became the Ember Accessibility Working Group, demonstrating our commitment to long-term accessibility growth in the framework.
What We've Done So Far
Ember has also been shipping improvements with the “a…]]></summary>
        <author>
            <name>Ember.js Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 Python Language Summit: Progress on Running Multiple Python Interpreters in Parallel in the Same Process]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/JSbNFZCoINo/the-2021-python-language-summit_16.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/JSbNFZCoINo/the-2021-python-language-summit_16.html"/>
        <updated>2021-05-17T03:53:00.002Z</updated>
        <summary type="html"><![CDATA[Victor Stinner and Dong-hee Na gave a presentation at the 2021 Python Language Summit about running multiple Python interpreters in parallel in the same process.




Use Cases 

Victor Stinner started by explaining why we would need to make the changes that they're discussing. One use case would be if you wanted to embed Python and extend the features of your application, like Vim, Blender, LibreOffice, and pybind11. Another use case is subinterpreters. For example, to handle HTTP requests, there is Apache mod_wsgi, which uses subinterpreters. There are also plugins for WeeChat, which is an IRC client written in C.

Embedding Python
One of the current issues with embedding Python is that it doesn't explicitly release memory at exit. If you use a tool to track memory leaks, such as Valgrind…]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
</feed>