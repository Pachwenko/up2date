<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-07-17T00:41:14.057Z</id>
    <title>osmos::feed</title>
    <updated>2021-07-17T00:41:14.057Z</updated>
    <generator>osmosfeed 1.11.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[The Road to Ember 4.0]]></title>
        <id>https://blog.emberjs.com/the-road-to-ember-4-0</id>
        <link href="https://blog.emberjs.com/the-road-to-ember-4-0"/>
        <updated>2021-07-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Contributors to the Ember project have been hard at work since Ember Octane was released in December 2019.
Over the duration of a challenging (and sometimes devastating) year and a half, we've shipped a powerful new feature (Named Blocks) and supported an ecosystem shifting to Octane conventions. We've more closely aligned Ember with wider frontend conventions through improved publishing & build tooling (Embroider) and better support for TypeScript (both through ember-cli-typescript and reducing reliance on type-unsafe framework features).
Check out Godfrey's EmberConf 2021 keynote for
a more complete walk-through of recent changes in Ember.
Announcing Ember 4.0
In his EmberConf 2021 keynote, Yehuda shared a name for Ember's next edition: Polaris. In order to unblock Polaris providing the …]]></summary>
        <author>
            <name>Ember.js Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Łukasz Langa is the inaugural CPython Developer-in-Residence!]]></title>
        <id>http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/QIjVUbY12IY/ukasz-langa-is-inaugural-cpython.html</id>
        <link href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/QIjVUbY12IY/ukasz-langa-is-inaugural-cpython.html"/>
        <updated>2021-07-12T15:31:00.008Z</updated>
        <summary type="html"><![CDATA[The PSF and the Python Steering Council are pleased to announce that the inaugural Developer-in-Residence role will be held by core developer Łukasz Langa. 
CPython, the reference implementation of Python, is developed and primarily maintained by volunteers. Inspired by the Django Fellowship Program's success, the PSF has strategically planned to support CPython in a similar way beginning this year. Thanks to the support from sponsors such as Google, this effort is now being put into motion! 
Łukasz will work full-time for one year to assist CPython maintainers and the Steering Council. Areas of responsibility will include analytical research to understand the project's volunteer hours and funding, investigation of project priorities and their tasks going forward, and begin working on those priorities. Regular reporting and full transparency to the community are also a large part of Łukasz’ role. If the program is impactful and the PSF raises enough funds, there is potential for the Developer-in-Residence role to continue beyond one year. We look forward to updating the community as work progresses!
Check out Łukasz’ personal announcement here.]]></summary>
        <author>
            <name>Python Software Foundation News</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ember 3.27 Released]]></title>
        <id>https://blog.emberjs.com/ember-3-27-released</id>
        <link href="https://blog.emberjs.com/ember-3-27-released"/>
        <updated>2021-07-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today the Ember project is announcing release 3.27 of Ember.js, Ember Data, and Ember CLI. This is a minor version, stable release.
We're also announcing the start of the 3.28 beta cycle for all sub-projects. We encourage our community (especially addon authors) to help test beta builds and report any bugs before they are published as a stable release in six weeks' time. The ember-try addon is a great way to continuously test your projects against the latest Ember releases.
Ember.js 3.28 (again, starting beta today) is the final planned version of the 3.x release cycle, and will
become an LTS release. As of the 3.28-beta being released, the main development
branch of all Ember projects will become 4.0. Look for more information on Ember
4.0 here on the blog this coming week.
You can read m…]]></summary>
        <author>
            <name>Ember.js Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django security releases issued: 3.2.5 and 3.1.13]]></title>
        <id>https://www.djangoproject.com/weblog/2021/jul/01/security-releases/</id>
        <link href="https://www.djangoproject.com/weblog/2021/jul/01/security-releases/"/>
        <updated>2021-07-01T06:42:04.000Z</updated>
        <summary type="html"><![CDATA[In accordance with our security release policy, the Django team
is issuing
Django 3.2.5 and
Django 3.1.13.
These releases address the security issue with severity "high" detailed below. We encourage all users of Django to upgrade as soon as possible.
CVE-2021-35042: Potential SQL injection via unsanitized QuerySet.order_by() input
Unsanitized user input passed to QuerySet.order_by() could bypass intended
column reference validation in path marked for deprecation resulting in a
potential SQL injection even if a deprecation warning is emitted.
As a mitigation the strict column reference validation was restored for the
duration of the deprecation period. This regression appeared in 3.1 as a side
effect of fixing #31426.
The issue is not present in the main branch as the deprecated path has been
removed.
Thanks to Joel Saunders for the report.
Affected supported versions
Django 3.2
Django 3.1
Resolution
Patches to resolve the issue have been applied to Django's 3.2 and 3.1
release branches. The patches may be obtained from the
following changesets:
On the 3.2 release branch
On the 3.1 release branch
The following releases have been issued:
Django 3.2.5 (download Django 3.2.5 | 3.2.5 checksums)
Django 3.1.13 (download Django 3.1.13 | 3.1.13 checksums)
The PGP key ID used for this release is Mariusz Felisiak: 2EF56372BA48CD1B.
General notes regarding security reporting
As always, we ask that potential security issues be reported via
private email to security@djangoproject.com, and not via Django's
Trac instance or the django-developers list. Please see our security
policies for further
information.]]></summary>
        <author>
            <name>Mariusz Felisiak</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Ember Times - Issue No. 183]]></title>
        <id>https://blog.emberjs.com/the-ember-times-issue-183</id>
        <link href="https://blog.emberjs.com/the-ember-times-issue-183"/>
        <updated>2021-07-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[👋 Emberistas! 🐹
New release of Unstable Ember Language Server, share code snippets on Twitter using Ember, the difference between ember serve and npm run start, and an addon roundup!
Release of uELS v2.0.16 ✅
Unstable Ember Language Server is a fully featured fork of Ember Language Server. While the name says unstable it actually has been stable and ready to use for day-to-day development!
Thanks to both Alex LaFroscia (@alexlafroscia) and Alex Kanunnikov (@lifeart) for new version release which provides:
Support workspace/didChangeConfiguration event
Improved startup speed by delaying template tokenization
Autocomplete now use global registry and file change events, not fs lookup, but we still do fs lookup on project initialization
Added template-lint severity support
Improved template-…]]></summary>
        <author>
            <name>Ember.js Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Ember Times - Issue No. 182]]></title>
        <id>https://blog.emberjs.com/the-ember-times-issue-182</id>
        <link href="https://blog.emberjs.com/the-ember-times-issue-182"/>
        <updated>2021-06-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[👋 Emberistas! 🐹
Using the in-element helper, migrating Controllers to top-level Components, Ember Upgrade Sprints, Ember development on Twitch, and remodeling an Ember App Part 2.
Using the in-element helper ⛳
Faith Or (@faith-or) wrote a blog post on how they migrated from ember-wormhole to the built-in in-element helper introduced in Ember 3.20.
Ember Wormhole is an addon that renders a child view somewhere else in the DOM outside of the component.
The in-element helper renders its block content outside of the regular flow, into a DOM element given by its destinationElement positional argument.
Common use cases for both include when a piece of UI is a logical child of a component but needs to render somewhere else such as a loading screen, a modal, tooltip or even a dropdown. The diffe…]]></summary>
        <author>
            <name>Ember.js Blog</name>
        </author>
    </entry>
</feed>